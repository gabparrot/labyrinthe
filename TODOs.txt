Choses à faire, ordre sans importance

- Créer un fichier Google Test pour chaque classe (labyrinthe, porte, piece)

- Créer une définition pour chaque déclaration faite dans porte.h
- Créer une définition pour chaque déclaration faite dans piece.h
- Créer une définition pour chaque déclaration faite dans labyrinthe.h

- Faire les commentaires dans le code pour la documentation DoxyGen
- Générer la documentation DoxyGen (soit à partir de l'app Windows DoxyGen en dehors de VStudio, avec 1 click docs [plugin] ou bien dans le VM)


À la fin / avant la remise:
- Créer un CMakeConfig text file
- Enlever #pragma once des .h et s'assurer qu'ils ont #ifndefine, etc
- Tester dans la machine virtuelle
- Nettoyer les commentaires du prof


==========

Le plan: 
- Utiliser les classes qui nous sont données pour générer un graphe non directionel où toutes les portes données par une couleur sont un chemin de poids 1
- Ensuite utiliser algorithme de Dijkstra pour calculer valeur du shortest path pour chaque couleur (chaque couleur a son propre fichier texte)
- Important d'utiliser une liste de noeuds déjà visités pour ne pas avoir de cycles infinis
- Retourner quel a le plus petit entre les 4 couleurs